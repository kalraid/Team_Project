<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.medicine_inc.bbs.mapper.BoardMapper" >
<!-- 
	<select id="boardList" resultType="Medi" parameterType="mediResultMap">
		select * from medi
	</select>
	
	<select id="getBoardCount" parameterType="hashmap" resultType="int">
		SELECT 
			COUNT(no) 
		FROM springbbs
		<where>	
			<if test="type == 'title'">
				title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'writer'">
				writer LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="type == 'content'">
				content LIKE CONCAT('%', #{keyword}, '%')
			</if>	
		</where>	
	</select>
	
	<select id="getBoard" resultType="Board" resultMap="boardResultMap">
		SELECT 
			* 
		FROM springbbs 
		WHERE no = #{no}
	</select>
	
	<insert id="insertBoard" parameterType="Board"
		useGeneratedKeys="true" keyProperty="no">
		INSERT INTO springbbs(title, writer, content, 
				reg_date, read_count, pass, file1)
				
			VALUES(#{title}, #{writer}, #{content}, 
				SYSDATE(), #{readCount}, #{pass}, #{file1} )
	</insert>
	
	<select id="isPassCheck" resultType="String">
		SELECT 
			pass
		FROM springbbs
		WHERE no = #{no}
	</select>
	
	<update id="updateBoard" parameterType="Board">
		UPDATE springbbs 
			SET title = #{title}, content = #{content},
				reg_date = SYSDATE()
		WHERE no = #{no}
	</update>
	
	<delete id="deleteBoard">
		DELETE FROM springbbs
		WHERE no = #{no}
	</delete>

	<update id="incrementReadCount">
		UPDATE springbbs
			SET read_count = read_count + 1
		WHERE no = #{no}
	</update>
	
	<insert id="insertFileNames" parameterType="FileName"
		useGeneratedKeys="true" keyProperty="no">
		INSERT INTO files(file2, bbs_no)
			VALUES
		<foreach item="fileName" collection="list" separator=",">
			(#{fileName.file2}, #{fileName.bbsNo}, #{fileName.test})
		</foreach>		
	</insert>
	
	<select id="replyList" resultType="Reply">
		SELECT 
			no,
			bbs_no AS bbsNo,
			reply_content AS replyContent,
			reply_writer AS replyWriter,
			reg_date AS regDate
		FROM reply
		WHERE bbs_no = #{no}
			ORDER BY no DESC
	</select>

	<update id="updateRecommend">
		UPDATE springbbs
			SET
			<if test="recommend == 'recommend'">		
				recommend=recommend + 1
			</if>
			<if test="recommend == 'thank'">
				thank = thank + 1
			</if>
		WHERE no = #{no}
	</update>
	
	<select id="getRecommend" resultType="Board">
		SELECT recommend, thank
		FROM springbbs
		WHERE no = #{no}
	</select>

	
		댓글을 추가하는 맵핑 구문		  
	
	<insert id="addReply" parameterType="Reply">
		INSERT INTO reply(bbs_no, reply_content, reply_writer, reg_date)
		VALUES(#{bbsNo}, #{replyContent}, #{replyWriter}, SYSDATE())
	</insert>

	
		댓글을 수정하는 맵핑 구문		  
	
	<update id="updateReply" parameterType="Reply">
		UPDATE reply
			SET reply_content = #{replyContent}, 
				reg_date = SYSDATE()
		WHERE no = #{no}
	</update>

	
		댓글을 삭제하는 맵핑 구문		  
	
	<delete id="deleteReply">
		DELETE FROM reply
		WHERE no = #{no}
	</delete>	
	 -->
	<!--
		Board 클래스의 프로퍼티와 테이블의 컬럼을 맵핑하는 ResultMap
		 
		테이블에 언터스코어 표기법으로 작성된 컬럼이 존재하면 도메인 객체의
		카멜케이스된 프로퍼티를 통해 컬럼의 값을 제대로 읽어오지 못한다.
		아래와 같이 resultMap을 정의해 테이블의 컬럼과 도메인 객체의
		프로퍼티를 설정하면 제대로 읽어 올 수 있다.
		
		resultMap 태그에 type 속성은 쿼리 결과를 매핑할 자바 도메인 객체를
		지정하고 그 하부에 <id> 태그를 사용해 기본키 컬럼을 지정한다.
		나머지 컬럼은 <result> 태그를 사용해 지정하면 도메인 객체로 맵핑할 수 있다.  
	-->
	<resultMap id="mediResultMap" type="Board">
		<id property="no" column="no" />
		<result property="title" column="title" />
		<result property="writer" column="writer" />
		<result property="content" column="content" />
		<result property="regDate" column="reg_date" />
		<result property="regCount" column="reg_count" />
		<result property="pass" column="pass" />
		<result property="file1" column="file1" />
		<result property="recommend" column="recommend" />
		<result property="thank" column="thank" />
	</resultMap>

</mapper>	



